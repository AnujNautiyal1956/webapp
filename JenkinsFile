pipeline {
  agent any 
    tools {
      maven "Maven"
    }
   stages {
    stage ("Initialize"){
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
            ''' 
      }
    }
    
   stage ("Check-git-Secrets"){
    steps {
      sh 'rm trufflehog || true'
      sh 'docker run gesellix/trufflehog --json https://github.com/AnujNautiyal1956/webapp.git > trufflehog'
      sh 'cat trufflehog'
    }
   } 
   
   stage ('Source-composition-Analysis'){
    steps {
      sh 'rm owasp* || true'
      sh 'wget "https://raw.githubusercontent.com/AnujNautiyal1956/webapp/master/owasp-dependency-check.sh" '
      sh 'chmod +x owasp-dependency-check.sh'
      sh 'bash owasp-dependency-check.sh'
      sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
   }
   }
   stage ("Sonar SAST"){
    steps {
      withSonarQubeEnv('sonar') {
          sh 'mvn sonar:sonar'
          sh 'cat target/sonar/report-task.txt'
          }
    }
   }
   stage ("Build"){
    steps {
      sh 'mvn clean package'
   }
   } 
   stage ("Deply to Tomcat"){
    steps {
      sshagent(['tomcat']){
        sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@54.155.87.154:/home/ubuntu/prod/apache-tomcat-8.5.66/webapps/webapp.war'
      }
     }
   }
   
   stage ("DAST"){
    steps {
      sshagent(['zap']){
        sh 'scp -o StrictHostKeyChecking=no ubuntu@52.215.39.253 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://54.155.87.154:8080/webapp/" || true'
       }
    }
   }
  }
  
}

